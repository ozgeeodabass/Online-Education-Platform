package ceng.gradProject.webApi.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ceng.gradProject.business.abstracts.CourseService;
import ceng.gradProject.core.utilities.results.DataResult;
import ceng.gradProject.core.utilities.results.Result;
import ceng.gradProject.entities.concretes.Course;

@RestController
@RequestMapping("/api/courses")
@CrossOrigin("http://localhost:8080/api/courses/getall")
public class CoursesController {
	
	private CourseService courseService;

	@Autowired
	public CoursesController(CourseService courseService) {
		super();
		this.courseService = courseService;
	}
	
	@GetMapping("/getall")
	public DataResult<List<Course>> getAll(){
		return this.courseService.getAll();
	}
	
	@PostMapping("/add")
	public Result add(@RequestBody Course course) {
		return this.courseService.add(course);
	}
	
	@GetMapping("/getByCourseTitle")
	public DataResult<Course> getByCourseTitle(@RequestParam String title) {
		return this.courseService.getByCourseTitle(title);
	}
	
	
	@GetMapping("/getBySubject")
	public DataResult<List<Course>> getBySubject(@RequestParam int id) {
		return this.courseService.getBySubject(id);
	}
	
	@GetMapping("/getByCourseTitleContains")
	public DataResult<List<Course>> getByCourseTitleContains(@RequestParam String name) {
		return this.courseService.getByCourseTitleContains(name);
	}
	
	@GetMapping("/getByInstructor")
	public DataResult<List<Course>> getByInstructor(@RequestParam int id) {
		return this.courseService.getByInstructor(id);
	}
	
	@GetMapping("/getByUser")
	public DataResult<List<Course>> getByUser(@RequestParam int id) {
		return this.courseService.getByUsers(id);
	}
	
	@GetMapping("/getByDepartment")
	public DataResult<List<Course>> getByDepartment(@RequestParam int id) {
		return this.courseService.getByDepartment(id);
	}
	
	@GetMapping("/getAllByPage")
	public DataResult<List<Course>> getAllByPage(@RequestParam int pageNo, @RequestParam int pageSize) {
		return this.courseService.getAllByPage(pageNo, pageSize);
	}
	
	@DeleteMapping("/deleteCourse")
	public Result delete(Course course) {
		return this.courseService.delete(course);
	}
	
	@PostMapping("/updateCourse")
	public DataResult<Course> update(Course course) {
		return this.courseService.update(course);
	}


}
