package ceng.gradProject.business.concretes;

import java.util.ArrayList;
import java.util.List;

import ceng.gradProject.business.abstracts.DepartmentService;
import ceng.gradProject.core.utilities.results.DataResult;
import ceng.gradProject.core.utilities.results.Result;
import ceng.gradProject.core.utilities.results.SuccessDataResult;
import ceng.gradProject.core.utilities.results.SuccessResult;
import ceng.gradProject.dataAccess.abstracts.DepartmentRepository;
import ceng.gradProject.entities.concretes.Course;
import ceng.gradProject.entities.concretes.Department;

public class DepartmentManager implements DepartmentService {
	
	private DepartmentRepository departmentRepository;
	
	
	public DepartmentManager(DepartmentRepository departmentRepository) {
		super();
		this.departmentRepository = departmentRepository;
	}

	@Override
	public DataResult<Department> getByDeptName(String name) {
		Department dept = departmentRepository.getByDeptName(name);
		Department deptResponse = new Department();
	
			deptResponse.setDeptId(dept.getDeptId());
			deptResponse.setDeptName(dept.getDeptName());
			

		return new SuccessDataResult<Department>(deptResponse,"Departmanlar Listelendi");
	}

	@Override
	public DataResult<List<Department>> getAll() {

		List<Department> departments = departmentRepository.findAll();
		List<Department> departmentsResponse = new ArrayList<Department>();
		
		for (Department dept : departments) {
			Department responseItem = new Department();
			responseItem.setDeptId(dept.getDeptId());
			responseItem.setDeptName(dept.getDeptName());
			
			departmentsResponse.add(responseItem);
			
		}
		return new SuccessDataResult<List<Department>>(departmentsResponse,"Departmanlar Listelendi");
	}

	@Override
	public Result add(Department department) {
		department.setDeptName(department.getDeptName());
		
		this.departmentRepository.save(department);
		return new SuccessResult("Departman Eklendi");
	}

	@Override
	public Result delete(Department department) {
		this.departmentRepository.delete(department);
		return new SuccessResult("Departman Silindi");
	}

	@Override
	public DataResult<Department> update(Department department) {
		int id = department.getDeptId();
		Course courseExist = this.courseRepository.findById(id).get();
		courseExist.setCourseTitle(course.getCourseTitle());
		courseExist.setCourseDescription(course.getCourseDescription());
		courseExist.setDepartment(course.getDepartment());
		courseExist.setInstructor(course.getInstructor());
		courseExist.setSubject(course.getSubject());
		
		return new SuccessDataResult<Course>(course, "Kurs GÃ¼ncellendi");
	}
	}

}
