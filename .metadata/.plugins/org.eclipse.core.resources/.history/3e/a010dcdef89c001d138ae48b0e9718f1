package ceng.gradProject.business.concretes;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import ceng.gradProject.business.abstracts.SubjectService;
import ceng.gradProject.business.requests.CreateSubjectRequest;
import ceng.gradProject.business.responses.GetAllSubjectsResponse;
import ceng.gradProject.core.utilities.results.DataResult;
import ceng.gradProject.core.utilities.results.Result;
import ceng.gradProject.core.utilities.results.SuccessDataResult;
import ceng.gradProject.core.utilities.results.SuccessResult;
import ceng.gradProject.dataAccess.abstracts.SubjectRepository;
import ceng.gradProject.entities.concretes.Course;
import ceng.gradProject.entities.concretes.Subject;

@Service
public class SubjectManager implements SubjectService {

	private SubjectRepository subjectRepository;
	
	@Autowired
	public SubjectManager(SubjectRepository subjectRepository) {
		this.subjectRepository = subjectRepository;
	}

	@Override
	public DataResult<List<Subject>> getAll() {
		List<Subject> subjects = subjectRepository.findAll();
		List<GetAllSubjectsResponse> subjectsResponse = new ArrayList<GetAllSubjectsResponse>();
		
		for (Subject subject : subjects) {
			GetAllSubjectsResponse responseItem = new GetAllSubjectsResponse();
			responseItem.setId(subject.getSubjectId());
			responseItem.setName(subject.getSubjectName());
			subjectsResponse.add(responseItem);
		}
		//iş kurallarından geçerse
		return new SuccessDataResult<List<GetAllSubjectsResponse>>(subjectsResponse, "Konular Listelendi");
	}

	@Override
	public Result add(CreateSubjectRequest createSubjectRequest) {
		Subject subject = new Subject();
		subject.setSubjectName(createSubjectRequest.getName());
		this.subjectRepository.save(subject);
		return new SuccessResult("Konu Eklendi");
		
	}
	
	public Result delete(Subject subject) {
		this.subjectRepository.delete(subject);
		return new SuccessResult("Kurs Silindi");
		
	}
	
	public DataResult<Subject> update(Subject subject) {
		int id = subject.getSubjectId();
		Subject subjectExist = this.subjectRepository.findById(id).get();
		subjectExist.setSubjectName(subject.getSubjectName());
		
		return new SuccessDataResult<Subject>(subject, "Kurs Güncellendi");
	}

}
